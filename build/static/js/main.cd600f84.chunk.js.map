{"version":3,"sources":["components/navBar.js","components/addquote.js","components/quotes.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","props","className","cUSDBalance","AddQuote","useState","text","setText","class","type","value","onChange","e","target","placeholder","onClick","addQuote","Quotes","newquote","setNewQuote","quotes","map","q","helpfull","userWallet","owner","addHelpfullness","index","editQuote","contractAddress","App","contract","setcontract","address","setAddress","kit","setKit","setcUSDBalance","setQuotes","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","console","log","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","getQuotes","methods","getQuotesLength","call","quotesLength","_quotes","Promise","resolve","reject","readQuotes","quote","push","all","_text","writeQuote","send","from","_index","cUSDContract","IERC","cost","BigNumber","toString","approve","increaseHelpfullness","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd600f84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const NavigationBar = (props) => {\r\n  return <div>\r\n\r\n\r\n\r\n    <nav className=\"navbar\"> \r\n    <h1 className=\"brand-name\">Quotes Dapp</h1>\r\n    <nav>\r\n            <span> <li><a className=\"balance\"><span>{props.cUSDBalance}</span>cUSD</a></li>\r\n            </span>\r\n            </nav>\r\n         \r\n    </nav>\r\n  </div>;\r\n};\r\n","import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nexport const AddQuote = (props) => {\r\n\r\nconst [text, setText] = useState('');\r\n\r\n\r\n\r\n  return <div>\r\n      <form>\r\n  <div class=\"form-row\">\r\n    \r\n      <input type=\"text\" class=\"form-control\" value={text}\r\n           onChange={(e) => setText(e.target.value)} placeholder=\"Author Name\"/>\r\n           \r\n    <button type=\"button\" onClick={()=>props.addQuote(text)} class=\"btn btn-info mt-2\">Add Quote</button>\r\n\r\n  </div>\r\n</form>\r\n  </div>;\r\n};\r\n","import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nexport const Quotes = (props) => {\r\n\r\n    const [newquote, setNewQuote] = useState('');\r\n\r\n  return <div className=\"card-container\">\r\n\r\n\r\n{props.quotes.map((q) =>(\r\n    <div className='col-3' key={q.index}>  \r\n    <div class=\"card\">\r\n    <div class=\"card-body \">\r\n      <h5 class=\"card-title\">{q.text}</h5>\r\n      <h6 class=\"card-subtitle\">Helpfullness: {q.helpfull}</h6>\r\n     \r\n      {props.userWallet !== q.owner && (\r\n        <button type=\"button\" class=\"btn btn-primary mt-2\" onClick={ ()=> props.addHelpfullness(q.index)}>helpfull</button>\r\n      )}\r\n    \r\n      <form>\r\n  <div class=\"form-r\">\r\n      <input type=\"text\" class=\"form-control mt-4\" value={newquote}\r\n           onChange={(e) => setNewQuote(e.target.value)} placeholder=\"enter quote\"/>\r\n\r\n      <button type=\"button\" onClick={()=>props.editQuote(q.index, newquote)} class=\"btn btn-primary mt-2\">edit quote</button>\r\n  </div>\r\n</form>\r\n      \r\n    </div>\r\n  </div>\r\n  </div>\r\n  ))};\r\n\r\n</div>\r\n};\r\n","\nimport './App.css';\n\nimport { NavigationBar } from './components/navBar';\nimport { AddQuote } from './components/addquote';\nimport { useState, useEffect, useCallback } from \"react\";\n\n\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\";\n\nimport IERC from \"./contracts/IERC.abi.json\";\nimport { Quotes } from './components/quotes';\n\n\nconst ERC20_DECIMALS = 18;\nconst helpfullnessPrice = \"1\";\n\n\n\nconst contractAddress = \"0xB88F2aB24e4e619150FFf63F20bAcDb04265D479\";\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\n\n\n\nfunction App() {\n  const [contract, setcontract] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [kit, setKit] = useState(null);\n  const [cUSDBalance, setcUSDBalance] = useState(0);\n  const [quotes, setQuotes] = useState([]);\n  \n\n\n  const connectToWallet = async () => {\n    if (window.celo) {\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const user_address = accounts[0];\n\n        kit.defaultAccount = user_address;\n\n        await setAddress(user_address);\n        await setKit(kit);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\"Error Occurred\");\n    }\n  };\n\n  const getBalance = useCallback(async () => {\n    try {\n      const balance = await kit.getTotalBalance(address);\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n\n      const contract = new kit.web3.eth.Contract(quotes, contractAddress);\n      setcontract(contract);\n      setcUSDBalance(USDBalance);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [address, kit]);\n\n\n\n  const getQuotes = useCallback(async () => {\n    const quotesLength = await contract.methods.getQuotesLength().call();\n    const quotes = [];\n    for (let index = 0; index < quotesLength; index++) {\n      let _quotes = new Promise(async (resolve, reject) => {\n      let quote = await contract.methods.readQuotes(index).call();\n\n        resolve({\n          index: index,\n          owner: quote[0],\n          text: quote[1],\n          helpfull: quote[2], \n        });\n      });\n      quotes.push(_quotes);\n    }\n\n\n    const _quotes = await Promise.all(quotes);\n    setQuotes(_quotes);\n  }, [contract]);\n\n\n  const addQuote = async (\n    _text\n  ) => {\n    try {\n      await contract.methods\n        .writeQuote(_text)\n        .send({ from: address });\n      getQuotes();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const editQuote = async (\n    _index, \n    _text\n  ) => {\n    try {\n      await contract.methods\n        .editQuote(_index, _text)\n        .send({ from: address });\n      getQuotes();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n\n  const addHelpfullness = async (_index) => {\n    try {\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\n      const cost = new BigNumber(helpfullnessPrice)\n        .shiftedBy(ERC20_DECIMALS)\n        .toString();\n      await cUSDContract.methods\n        .approve(contractAddress, cost)\n        .send({ from: address });\n      await contract.methods.increaseHelpfullness(_index, cost).send({ from: address });\n      getQuotes();\n      getBalance();\n      alert(\"you have successfully donated to the writer\");\n    } catch (error) {\n      alert(error);\n    }};\n\n\n  useEffect(() => {\n    connectToWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && address) {\n      getBalance();\n    }\n  }, [kit, address, getBalance]);\n\n  useEffect(() => {\n    if (contract) {\n      getQuotes();\n    }\n  }, [contract, getQuotes]);\n  \n  return (\n    <div className=\"App\">\n      <NavigationBar cUSDBalance={cUSDBalance} />\n      <Quotes userWallet={address} quotes={quotes} editQuote={editQuote} addHelpfullness={addHelpfullness}/>\n      <AddQuote addQuote={addQuote} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}